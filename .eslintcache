[{"D:\\node_react\\react1\\src\\index.js":"1","D:\\node_react\\react1\\src\\reportWebVitals.js":"2","D:\\node_react\\react1\\src\\App.js":"3","D:\\node_react\\react1\\src\\pages\\pages.js":"4","D:\\node_react\\react1\\src\\pages\\pegawai.js":"5"},{"size":547,"mtime":1611205561122,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":630,"mtime":1611204935229,"results":"9","hashOfConfig":"7"},{"size":248,"mtime":1611204419615,"results":"10","hashOfConfig":"7"},{"size":7001,"mtime":1611204743421,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"780scy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"D:\\node_react\\react1\\src\\index.js",[],["25","26"],"D:\\node_react\\react1\\src\\reportWebVitals.js",[],"D:\\node_react\\react1\\src\\App.js",[],"D:\\node_react\\react1\\src\\pages\\pages.js",[],"D:\\node_react\\react1\\src\\pages\\pegawai.js",["27"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Modal, Card, Table, Form} from 'react-bootstrap'\r\n\r\n\r\nclass Pegawai extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            pegawai: [],\r\n            id_pegawai: \"\",  \r\n            nama_pegawai: \"\",  \r\n            alamat: \"\",  \r\n            action: \"\", \r\n            search: '',\r\n            isModalOpen: false,\r\n        }\r\n    }\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",\r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_pegawai: item.id_pegawai,\r\n            nama_pegawai: item.nama_pegawai,\r\n            alamat: item.alamat,\r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n    getPegawai = () => {\r\n        let url = \"http://localhost:3000/pegawai\";\r\n        // mengakses api untuk mengambil data pegawai\r\n        axios.get(url)\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pegawai\r\n          this.setState({pegawai: response.data.pegawai});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    findPegawai = (event) => {\r\n        let url = \"http://localhost:3000/pegawai/find\";\r\n        if (event.keyCode === 13) {\r\n        //   menampung data keyword pencarian\r\n          let form = {\r\n            find: this.state.search\r\n          }\r\n          // mengakses api untuk mengambil data pegawai\r\n          // berdasarkan keyword\r\n          axios.post(url, form)\r\n          .then(response => {\r\n            // mengisikan data dari respon API ke array pegawai\r\n            this.setState({pegawai: response.data.pegawai});\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        /* menampung data nip, nama dan alamat dari Form\r\n        ke dalam FormData() untuk dikirim  */\r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n          url = \"http://localhost:3000/pegawai/save\"\r\n        } else {\r\n          url = \"http://localhost:3000/pegawai/update\"\r\n        }\r\n    \r\n        let form = {\r\n          id_pegawai: this.state.id_pegawai,\r\n          nama_pegawai: this.state.nama_pegawai,\r\n          alamat: this.state.alamat\r\n        }\r\n    \r\n        // mengirim data ke API untuk disimpan pada database\r\n        axios.post(url, form)\r\n        .then(response => {\r\n          // jika proses simpan berhasil, memanggil data yang terbaru\r\n          this.getPegawai();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n        // menutup form modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    Drop = (id_pegawai) => {\r\n        let url = \"http://localhost:3000/pegawai/\" + id_pegawai;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n          axios.delete(url)\r\n          .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.getPegawai();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <Card>\r\n                <Card.Header className=\"card-header bg-info text-white\" align={'center'}>Data Pegawai</Card.Header>\r\n                <Card.Body>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"search\" value={this.state.search} onChange={this.bind} onKeyUp={this.findPegawai} placeholder=\"Pencarian...\" />\r\n                <Button variant=\"success\" onClick={this.handleAdd}>\r\n                    Tambah Data\r\n                </Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>  \r\n                            <th>Nama</th>  \r\n                            <th>Alamat</th>  \r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.pegawai.map((item,index) => {  \r\n                        return (  \r\n                        <tr key={index}>  \r\n                            <td>{item.id_pegawai}</td>  \r\n                            <td>{item.nama_pegawai}</td>  \r\n                            <td>{item.alamat}</td>  \r\n                            <td>  \r\n                            <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                            data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                Edit  \r\n                            </Button>  \r\n                            <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_pegawai)}>  \r\n                                Hapus  \r\n                            </Button>  \r\n                            </td>  \r\n                        </tr>  \r\n                        );  \r\n                    })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleSave}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form Pegawai</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={this.handleSave}>  \r\n                    <div className=\"modal-body\">  \r\n                        NIP  \r\n                        <input type=\"number\" name=\"id_pegawai\" value={this.state.id_pegawai} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Nama  \r\n                        <input type=\"text\" name=\"nama_pegawai\" value={this.state.nama_pegawai} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Alamat  \r\n                        <input type=\"text\" name=\"alamat\" value={this.state.alamat} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                    </div>  \r\n                    <div className=\"modal-footer\">  \r\n                        <button className=\"btn btn-sm btn-success\" type=\"submit\">  \r\n                            Simpan  \r\n                        </button>  \r\n                    </div>  \r\n                    </form> \r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pegawai",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":37,"nodeType":"36","messageId":"37","endLine":3,"endColumn":41},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]